{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/left-nav.jsx","utils/utils.js","utils/MemoryUtils.js","components/header/header.jsx","components/footer/footer.jsx","pages/home/home.jsx","pages/category/category.jsx","pages/product/index.jsx","pages/product/pictures-wall.jsx","utils/constant.js","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/user/user.jsx","pages/role/role.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/order/order.jsx","pages/admin/admin.jsx","App.js","redux/reducer.js","redux/store.js","index.js","assets/images/logo.png"],"names":["storageUtils","saveUser","user","name","value","store","set","alert","getUser","get","removeUser","remove","SET_MENU_TITLE","RECEIVE_USER","ERROR_MSG","RESET_USER","ajax","url","data","arguments","length","undefined","method","Promise","resolve","reject","axios","params","post","then","response","catch","error","console","log","message","reqLogin","username","password","reqAddOrUpdateUser","_id","reqUsers","reqDeleteUser","userId","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqSearchProducts","_ref2","searchType","searchName","Object","defineProperty","reqDeleteImg","reqAddUpdateProduct","product","reqUpdateProductStatus","productId","status","reqAddRole","roleName","reqRoles","reqUpdateRole","role","reqWeather","city","concat","jsonp","param","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","receiveUser","type","errorMsg","msg","Item","es_form","Login","login","_callee","regenerator_default","a","wrap","_context","prev","next","_this","props","stop","this","react_default","createElement","Redirect","to","className","src","logo","alt","login_LoginForm","Component","login_login","connect","state","asyncToGenerator","mark","dispatch","result","sent","_x","apply","LoginForm","clickLogin","_this2","form","validateFields","_callee2","values","_context2","_x3","_x4","checkPassword","rule","callback","getFieldDecorator","initialValue","rules","required","min","input","placeholder","prefix","icon","validator","es_button","onClick","React","create","menuList","title","key","isPublic","children","SubMenu","es_menu","LeftNav","hasAuth","item","menuSet","has","find","child","clickLink","setMenuTitle","selectKey","getNodes","list","path","location","pathname","reduce","pre","subMenu","push","cItem","indexOf","openKey","menuItem","left_nav_Item","NavLink","Set","menus","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","menuTitle","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","MemoryUtils","Header","sysTime","now","getWeather","setState","getSysTime","intervalId","setInterval","logout","modal","confirm","content","onOk","onCancel","getTitle","forEach","menu","clearInterval","_this$state","row","href","col","span","Footer","Home","Option","es_select","Category","parentName","categorys","subCategorys","isShowAdd","isShowUpdate","getCategorys","pId","addCategory","_this$form$getFieldsV","getFieldsValue","resetFields","success","showUpdate","category","updateCategory","_callee3","_context3","getFieldValue","showSubCategorys","showCategorys","columns","dataIndex","width","render","_this3","card","style","fontSize","float","table","bordered","rowKey","dataSource","loading","pagination","defaultPageSize","showSizeChanger","showQuickJumper","visible","category_UpdateForm","setForm","category_AddForm","UpdateForm","category_Item","AddForm","_this$props","label","map","c","ProductIndex","total","products","updateProductStatus","getProducts","initColumns","price","btnText","statusText","history","_result$data","_this$state2","onChange","product_Option","marginLeft","marginRight","e","target","PicturesWall","previewVisible","previewImage","fileList","getImgs","file","handleCancel","handlePreview","thumbUrl","handleChange","imgs","img","index","uid","uploadButton","upload","action","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getContent","draftToHtml","convertToRaw","getCurrentContent","detail","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","react_draft_wysiwyg","wrapperClassName","editorClassName","ProductAddUpdate","setFieldsValue","category2","renderOptions","options","add_update_Option","subOptions","ShowSubCategory","submit","_this$props$form$getF","desc","category1","pCategoryId","p","refs","editor","replace","_this$renderOptions","formItemLayout","labelCol","wrapperCol","initValue1","initValue2","goBack","add_update_Item","assign","addonAfter","pictures_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","add_update","ProductDetail","cName1","cName2","getCategoryName","_this$props$location$","result1","result2","_cName","all","_this$props$location$2","es_list","height","dangerouslySetInnerHTML","__html","Product","Switch","Route","component","FormItem","User","isShow","users","roles","roleNames","clickDelete","initRoleNames","_onOk","getUsers","showAddUser","AddOrUpdateUser","user_UserForm","UserForm","phone","email","role_id","user_Option","TreeNode","Role","isShowRoleAuth","getRoles","showAddRole","showRoleAuth","updateRole","info","addRole","toConsumableArray","onRow","event","setRoleMenus","rowSelection","selectedRowKeys","selectedRows","disabled","role_AddRoleForm","role_RoleAuthForm","AddRoleForm","role_FormItem","PureComponent","RoleAuthForm","onCheck","checkedKeys","renderTreeNodes","node","tree","checkable","defaultExpandAll","Bar","sales","inventorys","getOption","text","tooltip","legend","xAxis","yAxis","series","update","sale","inventory","lib_default","option","Line","getOption2","boundaryGap","areaStyle","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","backgroundColor","top","textStyle","color","visualMap","show","max","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Order","Admin","left_nav_left_nav","header_header","App","BrowserRouter","initMenuTitle","initUser","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","es","App_App","document","getElementById","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.d3682fa9.chunk.js","sourcesContent":["/*\r\n封装一些用于local保存数据的工具函数\r\n保存\r\n读取\r\n删除\r\n */\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\n\r\nfunction setItem(name, value) {\r\n  if (value && typeof value !== 'function') {\r\n    store.set(name, value)\r\n  } else {\r\n    alert('不支持此类型数据的存储')\r\n  }\r\n}\r\n\r\nfunction getItem(name) {\r\n  return store.get(name) || ''\r\n}\r\n\r\nfunction removeItem(name) {\r\n  store.remove(name)\r\n}\r\n\r\nexport default {\r\n  saveUser(user) {\r\n    setItem(USER_KEY, user)\r\n  },\r\n\r\n  getUser() {\r\n    return getItem(USER_KEY)\r\n  },\r\n\r\n  removeUser () {\r\n    removeItem(USER_KEY)\r\n  },\r\n}\r\n","/*\r\n包含n个action的type名称常量的模块\r\n */\r\nexport const SET_MENU_TITLE = 'set_menu_title'  // 设置菜单标题\r\n\r\nexport const RECEIVE_USER = 'receive_user' // 接收用户\r\n\r\nexport const ERROR_MSG = 'error_msg' // 错误信息\r\n\r\nexport const RESET_USER = 'reset_user' // 重置用户\r\n\r\n/*\r\n* 有几个action type就会有几个对应的同步action creator\r\n*/","/*\r\n用来发送ajax请求的函数模块\r\n内部封装axios\r\n函数的返回值为promise对象\r\n目标:\r\n  1. 请求错误统一处理\r\n  2. 异步返回的是data, 而不是response\r\n解决: 自定义promsie对象\r\n */\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, method='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 使用axios执行异步ajax请求\r\n    if(method==='GET') {\r\n      promise = axios.get(url, {params: data})\r\n    } else {\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 如果请求成功了, 调用resolve()\r\n    promise.then(response => {\r\n      resolve(response.data) // 后面异步得到的就是data数据\r\n    // 如果请求失败了, 显示提示:请求出错了\r\n    }).catch(error => {\r\n      console.log(url, error)\r\n      message.error('请求出错了')\r\n    })\r\n  })\r\n}\r\n\r\n\r\n/*\r\nasync function reqLogin() {\r\n  const result = await ajax('/login', {username: 'tom', password: '123'}, 'POST')\r\n  if(result.status===0) {\r\n    alert('成功了')\r\n  } else {\r\n    alert('失败了')\r\n  }\r\n}*/\r\n","/*\r\n包含n个接口请求函数的模块\r\n对ajax模块进一步封装, 让发请求的调用代码更简洁\r\n函数返回的是promise对象\r\n\r\n技能: 根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport ajax from './ajax'\r\nconst BASE = 'http://localhost:5000'\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password) => ajax('/login', {username, password}, 'POST')\r\n\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax('/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n// 获取用户列表\r\nexport const reqUsers = () => ajax('/manage/user/list')\r\n\r\n// 删除用户\r\nexport const reqDeleteUser = (userId) => ajax('/manage/user/delete', {userId}, 'POST')\r\n\r\n\r\n// 获取一级/二级分类列表\r\nexport const reqCategorys = (parentId) => ajax('/manage/category/list', {parentId})\r\n// 添加分类\r\nexport const reqAddCategory = (parentId, categoryName) => ajax('/manage/category/add', {parentId, categoryName}, 'POST')\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax('/manage/category/update', {categoryId, categoryName}, 'POST')\r\n// 根据分类ID获取分类\r\nexport const reqCategory = (categoryId) => ajax('/manage/category/info', {categoryId})\r\n\r\n// 获取指定页的商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax('/manage/product/list', {pageNum, pageSize})\r\n\r\n// 搜索商品分页列表\r\n  // searchType: productDesc/ productName\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchType, searchName}) => ajax('/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName\r\n})\r\n\r\n// 删除图片\r\nexport const reqDeleteImg = (name) => ajax('/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加或者更新商品\r\nexport const reqAddUpdateProduct = (product) => ajax('/manage/product/' + (product._id ? 'update' : 'add'), product, 'POST')\r\n\r\n// 更新商品状态(上架/下架)\r\nexport const reqUpdateProductStatus = (productId, status) => ajax('/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax('/manage/role/add', {\r\n  roleName\r\n}, 'POST')\r\n\r\n// 获取角色列表\r\nexport const reqRoles = () => ajax('/manage/role/list')\r\n\r\n// 更新角色(给角色设置权限)\r\nexport const reqUpdateRole = (role) => ajax('/manage/role/update', role, 'POST')\r\n\r\n\r\n// 请求获取天气\r\nexport function reqWeather (city) {\r\n  return new Promise(function (resolve, reject) {\r\n\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发异步ajax请求\r\n    jsonp(\r\n      url,\r\n      {\r\n        param: 'callback'\r\n      },\r\n      (error, data) => {\r\n        console.log('callback', error, data)\r\n        if(!error) { // 如果成功了, 调用resolve传递数据\r\n          const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n          resolve({dayPictureUrl, weather})\r\n        } else { // 如果出错了, 显示提示\r\n          alert('请求天气接口出错啦!!!')\r\n        }\r\n      }\r\n    )\r\n  })\r\n}\r\n\r\n// reqWeather('北京').then(() => {}).catch(() => {})\r\n\r\n","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象\r\n异步action: 函数, dispatch => {}\r\n */\r\nimport {\r\n  SET_MENU_TITLE,\r\n  RECEIVE_USER,\r\n  ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport storageUtils from '../utils/storageUtils'\r\n/*\r\n设置当前菜单标题的同步action\r\n */\r\nexport const setMenuTitle = (menuTitle) => ({type: SET_MENU_TITLE, data: menuTitle})\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nconst receiveUser = (user) => ({type: RECEIVE_USER, data: user})\r\n/*\r\n提示错误信息的同步action\r\n */\r\nconst errorMsg = (msg) => ({type: ERROR_MSG, data: msg})\r\n\r\n/*\r\n登陆的异步action\r\n */\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    // 1. 执行异步(发ajax请求)\r\n    const result = await reqLogin(username, password)\r\n    // 2. 有了结果后, 分发对应的同步action\r\n    if(result.status===0) { // 登陆成功\r\n      const user = result.data\r\n      // 保存local\r\n      storageUtils.saveUser(user)\r\n      // 保存到状态中: 分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n    } else { // 登陆失败\r\n      const msg = result.msg\r\n      // 分发一个用于显示错误信息的同步action\r\n      dispatch(errorMsg(msg))\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () => {\r\n  // 移除local中的user\r\n  storageUtils.removeUser()\r\n  return {type: RESET_USER}\r\n}\r\n","import React, {Component} from 'react'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button\r\n} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {login} from '../../redux/actions'\r\nimport logo from '../../assets/images/logo.png'\r\nimport './index.less'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n\r\n  // 登陆请求\r\n  login = async (username, password) => {\r\n    this.props.login(username, password)\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.user\r\n    if(user._id) {// 用户已经登陆, 自动跳转到/home\r\n      // this.props.history.replace('/home')  // 事件回调函数中\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    return (\r\n      <div className='login'>\r\n        <div className='login-header'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          React项目: 后台管理系统\r\n        </div>\r\n\r\n        <div className='login-content'>\r\n          <div className='login-box'>\r\n            <div className=\"error-msg-wrap\">\r\n              <div className={user.msg ? \"show\" : \"\"}>\r\n                {user.msg}\r\n              </div>\r\n            </div>\r\n            <div className=\"title\">用户登陆</div>\r\n            <LoginForm login={this.login}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(Login)\r\n\r\n/*\r\n包含<Form>被包装组件\r\n */\r\nclass LoginForm extends React.Component {\r\n\r\n  static propTypes = {\r\n    login: PropTypes.func.isRequired\r\n  }\r\n\r\n  clickLogin = () => {\r\n\r\n    // 只有当验证没有错误时才输出输入的数据\r\n    this.props.form.validateFields(async (error, values) => {\r\n      console.log('validateFields', error, values)\r\n      if(!error) {\r\n        console.log('收集表单数据', values)\r\n        const {username, password} = values\r\n        this.props.login(username, password)\r\n      } else {\r\n        // this.props.form.resetFields() // 重置所有输入框\r\n      }\r\n    })\r\n  }\r\n\r\n  checkPassword = (rule,value,callback) => { // 如果不满足要求, 通过调用callback()来指定对应的message\r\n    console.log('checkPassword()', rule, value)\r\n    if(!value) {\r\n      callback('必须输入密码')\r\n    } else if(value.length<4 || value.length>8) {\r\n      callback('密码必须是4到8位')\r\n    } else {\r\n      callback() // 如果不传参数代表成功\r\n    }\r\n  }\r\n\r\n  render () {\r\n\r\n    const {getFieldDecorator } = this.props.form\r\n\r\n    // this.props.form.getFieldValue('username')\r\n\r\n    return (\r\n      <Form className='login-form'>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: 'admin', // input的默认值\r\n              rules: [ // 声明式验证配置\r\n                { type: \"string\", required: true, message: '必须输入用户名' },\r\n                { min: 4, message: '长度不能少于4位' },\r\n                ],\r\n            })(\r\n              <Input placeholder='请输入用户名' prefix={<Icon type=\"user\"/> }/>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n        <Form.Item>\r\n          {\r\n            getFieldDecorator('password', {\r\n              rules: [{validator: this.checkPassword}]  // 编程式验证\r\n            })(\r\n              <Input type='password' placeholder='请输入密码' prefix={<Icon type=\"lock\" />} />\r\n            )\r\n          }\r\n\r\n\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type='primary' className='login-form-button' onClick={this.clickLogin}>登录</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n包装包含<Form>的组件, 生成一个新的组件(包装组件)\r\n包装组件会向被包装传递一个属性: form\r\n */\r\nLoginForm = Form.create()(LoginForm)\r\n","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'safety',\r\n  },\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\nimport {NavLink, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setMenuTitle} from '../../redux/actions'\r\nimport menuList from '../../config/menuConfig'\r\nimport logo from '../../assets/images/logo.png'\r\nimport './left-nav.less'\r\n\r\nconst SubMenu = Menu.SubMenu\r\nconst Item = Menu.Item\r\n\r\n/*\r\n左侧导航组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前用户是否有看到当前item对应菜单项的权限\r\n   */\r\n  hasAuth = (item) => {\r\n    /*\r\n    {\r\n      title: '首页', // 菜单标题名称\r\n      key: '/home', // 对应的path\r\n      icon: 'home', // 图标名称\r\n    }\r\n    [\"/home\", \"/category\", \"/role\", \"/user\", \"/charts/bar\"]\r\n     */\r\n    /*\r\n    {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  }\r\n     */\r\n    const key = item.key\r\n    const menuSet = this.menuSet\r\n    /*\r\n    1. 如果菜单项标识为公开\r\n    2. 如果当前用户是admin\r\n    3. 如果菜单项的key在用户的menus中\r\n     */\r\n    if(item.isPublic || this.props.user.username==='admin' || menuSet.has(key)) {\r\n      return true\r\n\r\n    // 如果有子节点, 需要判断有没有一个child的key在menus中\r\n    } else if(item.children){\r\n      return !!item.children.find(child => menuSet.has(child.key))\r\n    }\r\n  }\r\n\r\n  /*\r\n  响应点击某个菜单项路由链接\r\n   */\r\n  clickLink = (item) => {\r\n    // 更新redux中的menuTitle状态数据\r\n    this.props.setMenuTitle(item.title)\r\n    // 保存当前点击的item所对应的key\r\n    this.selectKey = item.key\r\n  }\r\n\r\n  /*\r\n  得到当前用户需要显示的所有menu元素的列表\r\n  使用递归调用\r\n */\r\n  getNodes = (list) => {\r\n    // 得到当前请求的路径: /home\r\n    const path = this.props.location.pathname\r\n\r\n    return list.reduce((pre, item) => {\r\n      // 如果有权限才添加, 如果没有权限, 当前item所对应导航项就不显示\r\n      if(this.hasAuth(item)) {\r\n        if(item.children) {\r\n          const subMenu = (\r\n            <SubMenu key={item.key} title={<span><Icon type={item.icon}/><span>{item.title}</span></span>}>\r\n              {\r\n                this.getNodes(item.children)\r\n              }\r\n            </SubMenu>\r\n          )\r\n          pre.push(subMenu)\r\n\r\n          // 计算得到当前请求路径对应的父菜单的key\r\n          const cItem = item.children.find((child => path.indexOf(child.key)===0))\r\n          console.log('cItem', cItem)\r\n          if(cItem) {\r\n            this.openKey = item.key\r\n            this.selectKey = cItem.key\r\n          }\r\n        } else {\r\n          /*\r\n          {\r\n            title: '首页', // 菜单标题名称\r\n            key: '/home', // 对应的path\r\n            icon: 'home', // 图标名称\r\n          }\r\n           */\r\n          const menuItem = (\r\n            <Item key={item.key}>\r\n              <NavLink to={item.key} onClick={() => this.clickLink(item)}>\r\n                <Icon type={item.icon}/> {item.title}\r\n              </NavLink>\r\n            </Item>\r\n          )\r\n          pre.push(menuItem)\r\n\r\n          if(path===item.key || path.indexOf(item.key)===0) {\r\n            // 分发action, 设置菜单标题\r\n            this.props.setMenuTitle(item.title)\r\n          }\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前调用\r\n   */\r\n  componentWillMount() {\r\n    this.menuSet = new Set(this.props.user.role.menus)\r\n    this.menuNodes = this.getNodes(menuList)\r\n    console.log(this.menuNodes)\r\n  }\r\n\r\n\r\n  render() {\r\n    // 当前请求的路径\r\n    const path = this.selectKey || this.props.location.pathname\r\n    console.log('path', path)\r\n    return (\r\n      <div className='left-nav'>\r\n        <NavLink to='/home' className='logo'>\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </NavLink>\r\n\r\n        <Menu mode=\"inline\" theme='dark'\r\n              selectedKeys={[path]}\r\n              defaultOpenKeys={[this.openKey]}>\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 将一个非路由组件包装生成一个路由组件, 向非路由组件传递路由组件才有的3个属性: history/location/match\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {setMenuTitle}\r\n)(withRouter(LeftNav))\r\n","/*\r\n包含n个工具函数的模块\r\n */\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","/*\r\n用于在内存保存数据的工具模块\r\n */\r\nexport default class MemoryUtils {\r\n  static user = {}  // 用来存储用户信息\r\n}","import React, {Component} from 'react'\r\nimport {Row, Col, Modal} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {logout} from '../../redux/actions'\r\nimport menuList from '../../config/menuConfig'\r\nimport {reqWeather} from '../../api'\r\nimport {formateDate} from '../../utils/utils'\r\nimport MemoryUtils from '../../utils/MemoryUtils'\r\nimport './header.less'\r\n\r\n/*\r\n头部组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    sysTime: formateDate(Date.now()),\r\n    dayPictureUrl: '', // 天气图片的url\r\n    weather: ''\r\n  }\r\n\r\n  /*\r\n  发异步ajax获取天气数据并更新状态\r\n   */\r\n  getWeather = async () => {\r\n    const {dayPictureUrl, weather} = await reqWeather('北京')\r\n    this.setState({\r\n      dayPictureUrl,\r\n      weather\r\n    })\r\n  }\r\n\r\n  /*\r\n  启动循环定时器, 每隔1s更新一次sysTime\r\n   */\r\n  getSysTime = () => {\r\n    this.intervalId = setInterval(() => {\r\n      this.setState({\r\n        sysTime: formateDate(Date.now())\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('OK')\r\n        this.props.logout()\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel')\r\n      },\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据请求的path得到对应的标题\r\n   */\r\n  getTitle = (path) => {\r\n    let title\r\n    menuList.forEach(menu => {\r\n      if(menu.key===path) {\r\n        title = menu.title\r\n      } else if (menu.children) {\r\n        menu.children.forEach(item => {\r\n          if(path.indexOf(item.key)===0) {\r\n            title = item.title\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    return title\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getSysTime()\r\n    this.getWeather()\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n  render() {\r\n    const {sysTime, dayPictureUrl, weather} = this.state\r\n\r\n    // 得到当前用户\r\n    const user = MemoryUtils.user\r\n\r\n    // 得到当前请求的路径\r\n    // const path  = this.props.location.pathname\r\n    // 得到对应的标题\r\n    // const title = this.getTitle(path)\r\n\r\n    return (\r\n      <div className='header'>\r\n        <Row className='header-top'>\r\n          <span>欢迎，{user.username}</span>\r\n          <a href=\"javascript:\" onClick={this.logout}>退出</a>\r\n        </Row>\r\n        <Row className='breadcrumb'>\r\n          <Col span={4} className='breadcrumb-title'>{this.props.title}</Col>\r\n          <Col span={20} className='weather'>\r\n            <span className='date'>{sysTime}</span>\r\n            <span className='weather-img'>\r\n              <img src={dayPictureUrl} alt=\"weather\"/>\r\n            </span>\r\n            <span className='weather-detail'>{weather}</span>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({title: state.menuTitle}),\r\n  {logout}\r\n)(withRouter(Header))\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport './footer.less'\r\n\r\n/*\r\n底部组件\r\n */\r\nexport default function Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n    </div>\r\n  )\r\n}","import React, {Component} from 'react'\r\n\r\nimport './home.less'\r\n\r\n/*\r\n管理的Home路由组件\r\n */\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='home-wrap'>\r\n        欢迎使用硅谷后台管理系统\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\n\r\nimport {reqCategorys, reqAddCategory, reqUpdateCategory} from '../../api'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n管理的分类管理路由组件\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    parentId: '0', // 当前分类列表的parentId\r\n    parentName: '', // 父分类的名称\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 某个二级分类列表\r\n    isShowAdd: false, // 是否显示添加的框\r\n    isShowUpdate: false, // 是否显示更新的框\r\n  }\r\n\r\n  /*\r\n  获取一/二级分类列表\r\n  pId: 如果有值使用它, 如果没有值使用state中的parentId\r\n   */\r\n  getCategorys = async (pId) => {\r\n    const parentId = pId || this.state.parentId\r\n    console.log('getCategorys()', parentId)\r\n    const result = await reqCategorys(parentId)\r\n    if (result.status === 0) {\r\n      const categorys = result.data\r\n      // 更新状态\r\n      if(parentId==='0') { // 更新一级分类数组\r\n        this.setState({\r\n          categorys\r\n        })\r\n      } else { // 更新二级分类数组\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = async () => {\r\n    // 隐藏添加框\r\n    this.setState({\r\n      isShowAdd: false\r\n    })\r\n    // 得到输入的数据\r\n    const {parentId, categoryName} = this.form.getFieldsValue()\r\n    // console.log('add', parentId, categoryName)\r\n    // 重置表单项\r\n    this.form.resetFields()\r\n    // 提交添加分类的请求\r\n    const result = await reqAddCategory(parentId, categoryName)\r\n    if (result.status === 0) {\r\n      message.success('添加成功')\r\n      if(parentId===this.state.parentId || parentId==='0') {\r\n        this.getCategorys(parentId)\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示更新分类的界面\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 显示更新分类的modal\r\n    this.setState({\r\n      isShowUpdate: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = async () => {\r\n\r\n    // 隐藏框\r\n    this.setState({\r\n      isShowUpdate: false\r\n    })\r\n\r\n    // 收集数据\r\n    const categoryId = this.category._id\r\n    const categoryName = this.form.getFieldValue('categoryName')\r\n    // console.log('---', categoryId, categoryName)\r\n    // 重置表单项\r\n    this.form.resetFields()\r\n\r\n    // 发ajax请求\r\n    const result = await reqUpdateCategory({categoryId, categoryName})\r\n    if (result.status === 0) {\r\n      message.success('更新分类成功!!!')\r\n      this.getCategorys()\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  显示二级分类列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n\r\n    // setState()是异步更新的状态: 状态数据并不会立即更新, 而是回调处理完后才去更新\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 回调函数在状态更新之后立即执行\r\n      this.getCategorys()\r\n    })\r\n\r\n  }\r\n\r\n  /*\r\n  显示一级分类\r\n   */\r\n  showCategorys = () => {\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys()\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    // 所有列的数组\r\n    this.columns = [{\r\n      title: '分类名称',\r\n      dataIndex: 'name',\r\n      // render: (name, category) => <a href='javascript:'>{name}</a>\r\n    }, {\r\n      title: '操作',\r\n      width: 300,\r\n      render: (category) => {\r\n        return (\r\n          <span>\r\n            <a href=\"javascript:\" onClick={() => this.showUpdate(category)}>修改分类</a>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <a href=\"javascript:\" onClick={() => this.showSubCategorys(category)}>查看子分类</a>\r\n          </span>\r\n        )\r\n      }\r\n    }];\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    // 得到列的数组\r\n    const columns = this.columns\r\n    // 得到分类的数组\r\n    const {categorys, subCategorys, parentId, parentName, isShowAdd, isShowUpdate} = this.state\r\n    // console.log('categorys', categorys)\r\n    const category = this.category || {}\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          {\r\n            parentId==='0'\r\n            ? <span style={{fontSize: 15}}>一级分类列表</span>\r\n            : (\r\n                <span>\r\n                  <a href=\"javascript:\" onClick={this.showCategorys}>一级分类222</a>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <Icon type=\"arrow-right\" />\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <span>{parentName}</span>\r\n                </span>\r\n              )\r\n          }\r\n\r\n          <Button type='primary'\r\n                  style={{float: 'right'}}\r\n                  onClick={() => this.setState({isShowAdd: true})}>\r\n            <Icon type='plus'/>\r\n            添加分类\r\n          </Button>\r\n        </Card>\r\n\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          columns={columns}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          loading={categorys.length === 0}\r\n          pagination={{defaultPageSize: 10, showSizeChanger: true, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={isShowUpdate}\r\n          onOk={this.updateCategory}\r\n          onCancel={() => this.setState({isShowUpdate: false})}\r\n        >\r\n          <UpdateForm categoryName={category.name} setForm={(form) => this.form = form}/>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={isShowAdd}\r\n          onOk={this.addCategory}\r\n          onCancel={() => this.setState({isShowAdd: false})}\r\n        >\r\n          <AddForm categorys={categorys} parentId={parentId} setForm={(form) => this.form = form}/>\r\n        </Modal>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n更新分类的Form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string,\r\n    setForm: PropTypes.func.isRequired,\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n    const {categoryName} = this.props\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateForm = Form.create()(UpdateForm)\r\n\r\n\r\n/*\r\n添加分类的Form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    categorys: PropTypes.array.isRequired,\r\n    setForm: PropTypes.func.isRequired,\r\n    parentId: PropTypes.string.isRequired,\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n    const {categorys, parentId} = this.props\r\n    return (\r\n      <Form>\r\n        <Item label='所属分类'>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option key='0' value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option key={c._id} value={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        <Item label='分类名称'>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: ''\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nAddForm = Form.create()(AddForm)\r\n","import React, {Component} from 'react'\r\nimport {Card, Select, Input, Button, Icon, Table, message} from 'antd'\r\n\r\nimport {reqProducts, reqSearchProducts, reqUpdateProductStatus} from '../../api'\r\n\r\n\r\nconst Option = Select.Option\r\n/*\r\n商品管理的主界面路由\r\n */\r\nexport default class ProductIndex extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 当前页列表数据\r\n    searchType: 'productName', // 搜索类型  productName / productDesc\r\n    searchName: '', // 搜索关键字\r\n  }\r\n\r\n  /*\r\n  更新指定产品的状态\r\n   */\r\n  updateProductStatus = async (productId, status) => {\r\n    const result = await reqUpdateProductStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新状态成功!')\r\n      this.getProducts(this.pageNum || 1)\r\n    }\r\n  }\r\n\r\n  /*\r\n  初始化生成Tabe所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc'\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => <span>¥{price}</span>\r\n      },\r\n      {\r\n        title: '状态',\r\n        dataIndex: 'status',\r\n        render: (status, product) => {  // 1: 在售, 2: 已下架\r\n          let btnText = '下架'\r\n          let statusText = '在售'\r\n\r\n          if(status===2) {\r\n            btnText = '上架'\r\n            statusText = '已下架'\r\n          }\r\n\r\n          status = status===1 ? 2 : 1\r\n\r\n          return (\r\n            <span>\r\n              <Button type='primary' onClick={() => this.updateProductStatus(product._id, status)}>{btnText}</Button>\r\n                &nbsp;&nbsp;\r\n                <span>{statusText}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (product) => (\r\n          <span>\r\n            <a href=\"javascript:\" onClick={() => this.props.history.push('/product/detail', product)}>详情</a>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <a href=\"javascript:\" onClick={() => this.props.history.push('/product/addupdate', product)}>修改</a>\r\n          </span>\r\n        )\r\n      },\r\n\r\n    ]\r\n  }\r\n\r\n  /*\r\n  异步获取指定页的数据\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum\r\n    const {searchType, searchName} = this.state\r\n    let result\r\n    if(searchName) { // 搜索分页\r\n      result = await reqSearchProducts({pageNum, pageSize: 3, searchType, searchName})\r\n    } else { // 一般分页\r\n      result = await reqProducts(pageNum, 3)\r\n    }\r\n    console.log('getProducts()', result)\r\n    if(result.status===0) {\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {products, total, searchType} = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Select value={searchType} onChange={value => this.setState({searchType: value})}>\r\n            <Option key='productName' value='productName'>按名称搜索</Option>\r\n            <Option key='productDesc' value='productDesc'>按描述搜索</Option>\r\n          </Select>\r\n\r\n          <Input style={{width: 150, marginLeft: 10, marginRight: 10}} placeholder='关键字'\r\n                onChange={(e) => this.setState({searchName: e.target.value})}/>\r\n\r\n          <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n\r\n          <Button type='primary' style={{float: 'right'}} onClick={() => this.props.history.push('/product/addupdate')}>\r\n            <Icon type='plus'/>\r\n            添加商品22\r\n          </Button>\r\n        </Card>\r\n\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n\r\n          columns={this.columns}\r\n          dataSource={products}\r\n          pagination={{\r\n            defaultPageSize: 3,\r\n            total,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Upload, Icon, Modal, message} from 'antd'\r\n\r\nimport {BASE_IMG_PATH, UPLOAD_IMG_NAME} from '../../utils/constant'\r\nimport {reqDeleteImg} from '../../api'\r\n\r\n/*\r\n管理商品图片的组件(上传/删除图片)\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 是否显示大图预览\r\n    previewImage: '', // 大图的url\r\n    fileList: [] // 所有需要显示的图片信息对象的数组\r\n  }\r\n\r\n  /*\r\n  得到当前已上传的图片文件名的数组\r\n   */\r\n  getImgs = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  // 关闭大图预览\r\n  handleCancel = () => this.setState({previewVisible: false})\r\n\r\n  /*\r\n  预览大图\r\n   */\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl, // 需要显示的大图的url\r\n      previewVisible: true,\r\n    });\r\n  }\r\n\r\n  /*\r\n  file: 当前操作文件信息对象\r\n  fileList: 所有文件信息对象的数组\r\n   */\r\n  handleChange = async ({file, fileList}) => {\r\n    console.log('handleChange()', file, fileList)\r\n    // 如果上传图片完成\r\n    if (file.status === 'done') {\r\n      const result = file.response\r\n      if (result.status === 0) {\r\n        message.success('上传成功了')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length - 1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传失败了')\r\n      }\r\n    } else if (file.status === 'removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if(result.status===0) {\r\n        message.success('删除图片成功')\r\n      } else {\r\n        message.error('删除图片失败')\r\n      }\r\n    }\r\n\r\n    // 更新fileList状态\r\n    this.setState({fileList})\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    // 如果传入了imgs, 生成一个对应的fileList, 并更新fileList状态\r\n    const imgs = this.props.imgs\r\n    if (imgs && imgs.length > 0) {\r\n      const fileList = imgs.map((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done', // loading: 上传中, done: 上传完成, remove: 删除\r\n        url: BASE_IMG_PATH + img,\r\n      }))\r\n      this.state.fileList = fileList\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {previewVisible, previewImage, fileList} = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\"/>\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"/manage/img/upload\"\r\n          accept=\"image/*\"\r\n          name= {UPLOAD_IMG_NAME}\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n包含n个应用中的常量字符串模块\r\n */\r\nexport const BASE_IMG_PATH = 'http://localhost:5000/upload/'  // 上传的图片的基础地址\r\nexport const UPLOAD_IMG_NAME = 'image' // 上传图片的参数名\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\n\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\n/*\r\n用来指定商品详情信息的富文本编程器组件\r\n */\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(),\r\n  }\r\n\r\n  /*\r\n  当输入改变时立即保存状态数据\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  /*\r\n  得到输入的富文本数据\r\n   */\r\n  getContent = () => {\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 根据传入的html文本初始显示\r\n    const detail = this.props.detail\r\n    if(detail) { // 如果传入才需要做处理\r\n      const blocksFromHtml = htmlToDraft(detail);\r\n      const { contentBlocks, entityMap } = blocksFromHtml;\r\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state.editorState = editorState\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Icon, Form, Input, Select, Button, message} from 'antd'\r\n\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport {reqCategorys, reqAddUpdateProduct} from '../../api'\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n商品管理的添加/更新路由组件\r\n */\r\nclass ProductAddUpdate extends Component {\r\n\r\n  state = {\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [],  // 二级分类列表\r\n  }\r\n\r\n\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)\r\n    const categorys = result.data\r\n    if(parentId==='0') {\r\n      this.setState({\r\n        categorys\r\n      })\r\n    } else {\r\n\r\n      this.setState({\r\n        subCategorys: categorys\r\n      }, () => {\r\n        if(categorys.length>0) {\r\n          this.props.form.setFieldsValue({\r\n            category2: categorys[0]._id\r\n          })\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n    根据状态中的分类数组生成Option数组\r\n   */\r\n  renderOptions = () => {\r\n    const {categorys, subCategorys} = this.state\r\n    const options = categorys.map(c => (\r\n      <Option key={c._id} value={c._id}>{c.name}</Option>\r\n    ))\r\n    const subOptions = subCategorys.map(c => (\r\n      <Option key={c._id} value={c._id}>{c.name}</Option>\r\n    ))\r\n\r\n    return {options, subOptions}\r\n  }\r\n\r\n  /*\r\n  显示二级分类列表\r\n   */\r\n  ShowSubCategory = (parentId) => {\r\n    const product = this.props.location.state || {}\r\n    product.categoryId = ''\r\n    this.getCategorys(parentId)\r\n  }\r\n\r\n  /*\r\n  添加/更新商品\r\n   */\r\n  submit = async () => {\r\n    const {name, desc, price, category1, category2} = this.props.form.getFieldsValue()\r\n    let pCategoryId, categoryId\r\n    if(!category2 || category2==='未选择') { // 当前要添加的商品是一级分类下的\r\n      pCategoryId = '0'\r\n      categoryId = category1\r\n    } else { // 当前要添加的商品是二级分类下的\r\n      pCategoryId = category1\r\n      categoryId = category2\r\n    }\r\n\r\n    // 得到富文本输入内容 (标签对象就是组件对象)\r\n    const detail = this.refs.editor.getContent()\r\n\r\n    // 得到所上传图片的文件名的数组\r\n    const imgs = this.refs.imgs.getImgs()\r\n\r\n    const product = {name, desc, price, pCategoryId, categoryId, detail, imgs}\r\n\r\n    // 如果是更新, 指定_id属性\r\n    const p = this.props.location.state\r\n    if(p) {\r\n      product._id = p._id\r\n    }\r\n\r\n    const result = await reqAddUpdateProduct(product)\r\n    if(result.status===0) {\r\n      message.success('保存商品成功了')\r\n      this.props.history.replace('/product/index')\r\n    } else {\r\n      message.error('保存商品失败了, 请重新处理')\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n    // 如果当前是更新, 且商品所属分类是二级分类(pCategoryId不是0), 就需要去获取二级分类列表\r\n    const product = this.props.location.state\r\n    if(product && product.pCategoryId!=='0') {\r\n      this.getCategorys(product.pCategoryId)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {options, subOptions} = this.renderOptions()\r\n    const product = this.props.location.state || {}\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 12 },\r\n    };\r\n\r\n    let initValue1 = '未选择'\r\n    let initValue2 = '未选择'\r\n    if(product.pCategoryId==='0') { // 一级分类下的商品\r\n      initValue1 = product.categoryId\r\n    } else if (product.pCategoryId) { // 二级分类下的商品\r\n      initValue1 = product.pCategoryId\r\n      initValue2 = product.categoryId || '未选择'\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>\r\n          <a href=\"javascript:\" onClick={() => this.props.history.goBack()}>\r\n            <Icon type='arrow-left'/>\r\n          </a>\r\n          &nbsp;&nbsp;\r\n          {product._id ? '编辑商品' : '添加商品'}\r\n\r\n          <Form>\r\n            <Item label='商品名称' labelCol={{span: 2}} wrapperCol={{span: 12}}>\r\n\r\n              {\r\n                getFieldDecorator('name', {\r\n                  initialValue: product.name\r\n                })(\r\n                  <Input placeholder='请输入商品名称'/>\r\n                )\r\n              }\r\n\r\n            </Item>\r\n            <Item label='商品描述' {...formItemLayout}>\r\n\r\n              {\r\n                getFieldDecorator('desc', {\r\n                  initialValue: product.desc\r\n                })(\r\n                  <Input placeholder='请输入商品描述'/>\r\n                )\r\n              }\r\n\r\n            </Item>\r\n\r\n            <Item label='商品价格' {...formItemLayout}>\r\n\r\n              {\r\n                getFieldDecorator('price', {\r\n                  initialValue: product.price\r\n                })(\r\n                  <Input placeholder='请输入商品价格' addonAfter='元'/>\r\n                )\r\n              }\r\n\r\n            </Item>\r\n\r\n            <Item label='商品分类' {...formItemLayout}>\r\n\r\n              {\r\n                options.length>0 ?\r\n                  getFieldDecorator('category1', {\r\n                    initialValue: initValue1\r\n                  })(\r\n                    <Select style={{width: 200}} onChange={value => this.ShowSubCategory(value)}>\r\n                      {options}\r\n                    </Select>\r\n                  ) : null\r\n              }\r\n              &nbsp;&nbsp;&nbsp;\r\n              {\r\n                subOptions.length>0 ?\r\n                  getFieldDecorator('category2', {\r\n                    initialValue: initValue2\r\n                  })(\r\n                    <Select style={{width: 200}}>\r\n                      {subOptions}\r\n                    </Select>\r\n                  ) : null\r\n              }\r\n\r\n            </Item>\r\n\r\n            <Item label='商品图片' {...formItemLayout}>\r\n              <PicturesWall ref='imgs' imgs={product.imgs}/>\r\n            </Item>\r\n\r\n            <Item label='商品详情' labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n              <RichTextEditor ref='editor' detail={product.detail}/>\r\n            </Item>\r\n\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Form>\r\n        </h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)","import React, {Component} from 'react'\r\nimport {List, Icon} from 'antd'\r\n\r\nimport {reqCategory} from '../../api'\r\nimport {BASE_IMG_PATH} from '../../utils/constant'\r\n\r\n/*\r\n商品详情组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '',  // 一级分类名称\r\n    cName2: '' // 二级分类名称\r\n  }\r\n\r\n  /*\r\n  异步获取当前产品对应的分类名称\r\n   */\r\n  getCategoryName = async () => {\r\n    const {categoryId, pCategoryId} = this.props.location.state\r\n    if(pCategoryId==='0') {\r\n      // 获取一级分类名称\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else {\r\n      // 获取一级分类名称\r\n      /*const result1 = await reqCategory(pCategoryId)\r\n      const cName1 = result1.data.name\r\n      // 获取二级分类名称\r\n      const result2 = await reqCategory(categoryId)\r\n      const cName2 = result2.data.name\r\n      this.setState({cName1, cName2})*/\r\n\r\n      /*\r\n      一次发多个请求, 等所有请求都返回后一起处理, 如果有一个请求出错了, 整个都会失败\r\n      Promise.all([promise1, promise2]) 返回值一个promise对象, 异步成功返回的是[result1, result2]\r\n       */\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const result1 = results[0]\r\n      const result2 = results[1]\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      this.setState({cName1, cName2})\r\n    }\r\n  }\r\n\r\n  /*\r\n  function Person () {}\r\n  Person.test = function (){}\r\n  const p = new Person()\r\n  p.test()\r\n  函数对象: 将函数作为对象使用, 此时就称函数对象\r\n  函数的实例对象:\r\n   */\r\n\r\n  componentDidMount() {\r\n    this.getCategoryName()\r\n  }\r\n\r\n  render() {\r\n    const {name, desc, price, categoryId, pCategoryId, imgs, detail} = this.props.location.state\r\n    const {cName1, cName2} = this.state\r\n    return (\r\n      <div className='product-detail'>\r\n        <h1>\r\n          <Icon type=\"arrow-left\" onClick={() => this.props.history.goBack()}/>&nbsp;&nbsp;\r\n          商品详情\r\n        </h1>\r\n\r\n        <List>\r\n          <List.Item>\r\n            <span className='left'>商品名称:</span>\r\n            <span>{name}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品描述:</span>\r\n            <span>{desc}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品价格:</span>\r\n            <span>{price + '元'}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>所属分类:</span>\r\n            <span>{cName1 + '-->' + cName2}</span>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img src={BASE_IMG_PATH + img} alt=\"img\" key={img}\r\n                       style={{width: 150, height: 150, marginRight: 10}}/>\r\n                ))\r\n              }\r\n            </span>\r\n          </List.Item>\r\n\r\n          <List.Item>\r\n            <span className='left'>商品详情:</span>\r\n            <div dangerouslySetInnerHTML={{__html: detail}}></div>\r\n          </List.Item>\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport ProductIndex from './index'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n管理的商品管理路由组件\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product/index' component={ProductIndex}/>\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product/index'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Modal,\r\n} from 'antd'\r\n\r\nimport {\r\n  reqUsers,\r\n  reqAddOrUpdateUser,\r\n  reqDeleteUser\r\n} from '../../api'\r\nimport {formateDate} from '../../utils/utils'\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n后台管理的用户管理路由组件\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    isShow: false,\r\n    users: [], // 所有用户的列表\r\n    roles: [], // 所有角色的列表\r\n  }\r\n\r\n  /*\r\n  初始化Table的字段列表\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: value => this.roleNames[value]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <a href=\"javascript:;\" onClick={() => this.showUpdate(user)}>修改</a>\r\n            &nbsp;&nbsp;\r\n            <a href=\"javascript:;\" onClick={() => this.clickDelete(user)}>删除</a>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据角色的数组生成一个包含所有角色名的对象容器\r\n   */\r\n  initRoleNames = (roles) => {\r\n    this.roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n  }\r\n\r\n  /*\r\n  响应点击删除用户\r\n   */\r\n  clickDelete = (user) => {\r\n    Modal.confirm({\r\n      content: `确定删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示修改用户的界面\r\n   */\r\n  showUpdate = (user) => {\r\n    // 保存user\r\n    this.user = user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  异步获取所有用户列表\r\n   */\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if(result.status===0) {\r\n      const {users, roles} = result.data\r\n      // 初始化生成一个包含所有角色名的对象容器 {_id1: name1, _id2: nam2}\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  显示添加用户的界面\r\n   */\r\n  showAddUser = () => {\r\n    this.user = null\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  AddOrUpdateUser = async () => {\r\n    // 获取表单数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    if(this.user) {\r\n      user._id = this.user._id\r\n    }\r\n    this.setState({\r\n      isShow: false\r\n    })\r\n\r\n    const result = await reqAddOrUpdateUser(user)\r\n    if(result.status===0) {\r\n      this.getUsers()\r\n    }\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getUsers()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {users, roles, isShow} = this.state\r\n    const user = this.user || {}\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.showAddUser}>创建用户</Button>\r\n        </Card>\r\n\r\n        <Table\r\n          columns={this.columns}\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          bordered\r\n          pagination={{defaultPageSize: 10, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onCancel={() => this.setState({isShow: false})}\r\n          onOk={this.AddOrUpdateUser}\r\n        >\r\n          <UserForm setForm={(form) => this.form = form} user={user} roles={roles}/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n/*\r\n用来添加或更新的form组件\r\n */\r\nclass UserForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n    user: PropTypes.object,\r\n    roles: PropTypes.array\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form\r\n    const formItemLayout = {\r\n      labelCol: {span: 5},\r\n      wrapperCol: {span: 16}\r\n    }\r\n\r\n    const {user, roles} = this.props\r\n    return (\r\n      <Form>\r\n        <FormItem label=\"用户名\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username\r\n            })(\r\n              <Input type=\"text\" placeholder=\"请输入用户名\"/>\r\n            )\r\n          }\r\n        </FormItem>\r\n\r\n        {\r\n          !user._id ?\r\n            (\r\n              <FormItem label=\"密码\" {...formItemLayout}>\r\n                {\r\n                  getFieldDecorator('password', {\r\n                    initialValue: ''\r\n                  })(\r\n                    <Input type=\"passowrd\" placeholder=\"请输入密码\"/>\r\n                  )\r\n                }\r\n              </FormItem>\r\n            ) : null\r\n        }\r\n\r\n\r\n\r\n        <FormItem label=\"手机号\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone\r\n            })(\r\n              <Input type=\"phone\" placeholder=\"请输入手机号\"/>\r\n            )\r\n          }\r\n        </FormItem>\r\n\r\n        <FormItem label=\"邮箱\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email\r\n            })(\r\n              <Input type=\"email\" placeholder=\"请输入邮箱\"/>\r\n            )\r\n          }\r\n        </FormItem>\r\n\r\n        <FormItem label=\"角色\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id\r\n            })(\r\n              <Select style={{width: 200}}>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nUserForm = Form.create()(UserForm)","import React, {Component, PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  message,\r\n  Tree\r\n} from 'antd'\r\n\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/utils'\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport MemoryUtils from \"../../utils/MemoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nconst FormItem = Form.Item\r\nconst { TreeNode } = Tree\r\n\r\n/*\r\n后台管理的角色管理路由组件\r\nComponent:\r\n  shouldComponentUpdate()返回值总是true, 只要setState()就导致重新render(即使数据没有变化)\r\n  重写shouldComponentUpdate(), 判断state和props中的数据是否发生改变, 如果没有变化返回false, 否则返回true\r\nPureComponent:\r\n  重写shouldComponentUpdate(), 对组件状态/属性数据进行改变的判断, 如果没有变化返回false, 否则返回true\r\n  如果直接修改state中的数据, 再调用setState()更新, 不会重新渲染(有问题)\r\n      原因: 状态数据变量的值没有变, shouldComponentUpdate()的返回值是false\r\n      解决: 生成一个状态数据拷贝数据, 更新拷贝的数据, 再调用setState(), shouldComponentUpdate()的返回值是true\r\n\r\n */\r\nexport default class Role extends Component {\r\n\r\n  state = {\r\n    isShowAdd: false, // 是否显示添加角色的Modal\r\n    isShowRoleAuth: false, // 是否显示设置角色权限的Modal\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 当前选中的角色\r\n    menus: [], // 当前角色的所有权限的数组\r\n  }\r\n\r\n  /*\r\n  异步获取所有角色的列表\r\n   */\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if(result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示添加角色的界面\r\n   */\r\n  showAddRole = () => {\r\n    this.setState({\r\n      isShowAdd: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示给角色授权的界面\r\n   */\r\n  showRoleAuth = () => {\r\n    this.setState({\r\n      isShowRoleAuth: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  初始化Table的字段数据\r\n   */\r\n  initColumns = () => {\r\n    /*\r\n    {\r\n      \"menus\": [\r\n        \"/home\"\r\n      ],\r\n      \"_id\": \"5c30c5bdc3bc1f6128a60375\",\r\n      \"name\": \"测试\",\r\n      \"auth_name\": \"admin\",\r\n      \"create_time\": 1546700221686,\r\n      \"__v\": 0,\r\n      \"auth_time\": 1548001177165\r\n    }\r\n     */\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        // render: (create_time) => formateDate(create_time)\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name',\r\n      }\r\n    ]\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n    this.setState({\r\n      isShowRoleAuth: false\r\n    })\r\n\r\n    const {role, menus} = this.state\r\n    // 更新role的menus\r\n    role.menus = menus\r\n    const result = await reqUpdateRole(role)\r\n    if(result.status===0) {\r\n      // 如果更新是当前登陆用户对应的角色, 强制重新登陆\r\n      if(MemoryUtils.user.role_id===role._id) {\r\n        storageUtils.removeUser()\r\n        MemoryUtils.user = {}\r\n        this.props.history.replace('/login')\r\n        message.info('当前用户的权限更新了, 请重新登陆')\r\n      } else {\r\n        message.success('授权成功')\r\n        this.getRoles()\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = async () => {\r\n    const roleName = this.form.getFieldValue('roleName')\r\n    this.form.resetFields()\r\n    this.setState({\r\n      isShowAdd: false\r\n    })\r\n\r\n    const result = await reqAddRole(roleName)\r\n    if (result.status === 0) {\r\n      message.success('添加角色成功')\r\n      const role = result.data\r\n\r\n      // const roles = this.state.roles  // 不会重新渲染\r\n      const roles = [...this.state.roles]\r\n\r\n      roles.push(role)\r\n      this.setState({\r\n        roles: roles\r\n      })\r\n\r\n    }\r\n  }\r\n    /*\r\n    const arr = []\r\n    const arr2 = arr\r\n    console.log(arr===arr2)\r\n    arr2.push(1)\r\n    console.log(arr===arr2)\r\n    */\r\n\r\n\r\n  /*\r\n  用来绑定行操作的各种事件监听\r\n   */\r\n  onRow=(role) => {\r\n    return {\r\n      onClick: (event) => {// 点击行\r\n        this.setState({\r\n          role,\r\n          menus: role.menus\r\n        })\r\n\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新当前角色的menus\r\n   */\r\n  setRoleMenus = (menus) => {\r\n    this.setState({\r\n      menus\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n\r\n /* shouldComponentUpdate (nextProps, nextState) {\r\n    const {role, menus, roles, isShowAdd} = this.state\r\n    console.log('shouldComponentUpdate()', nextProps, nextState, nextState.roles===roles)\r\n    return nextState.role!=role || nextState.menus!=menus || nextState.roles!=roles || nextState.isShowAdd!=isShowAdd\r\n  }*/\r\n\r\n  render() {\r\n    console.log('render()')\r\n    const {roles,role, menus, isShowAdd, isShowRoleAuth} = this.state\r\n\r\n    // 选择功能的配置\r\n    const rowSelection = {\r\n      type: 'radio',\r\n      selectedRowKeys: [role._id],\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log('onChange()', selectedRowKeys, selectedRows)\r\n        this.setState({\r\n          role: selectedRows[0]\r\n        })\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.showAddRole}>创建角色</Button>&nbsp;&nbsp;\r\n          <Button type=\"primary\" onClick={this.showRoleAuth} disabled={!role._id}>设置角色权限</Button>&nbsp;&nbsp;\r\n        </Card>\r\n\r\n        <Table\r\n          columns={this.columns}\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          bordered\r\n          rowSelection={rowSelection}\r\n          onRow = {this.onRow}\r\n          pagination={{defaultPageSize: 100, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"创建角色\"\r\n          visible={isShowAdd}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n          }}\r\n          onOk={this.addRole}\r\n        >\r\n          <AddRoleForm setForm={(form) => this.form = form}/>\r\n        </Modal>\r\n\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowRoleAuth}\r\n          onCancel={() => this.setState({isShowRoleAuth: false, menus: role.menus})}\r\n          onOk={this.updateRole}\r\n        >\r\n          <RoleAuthForm\r\n            roleName={role.name}\r\n            menus={menus}\r\n            setRoleMenus = {this.setRoleMenus}/>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n/*\r\n用来添加角色的form组件\r\n */\r\nclass AddRoleForm extends PureComponent {\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form\r\n    const formItemLayout = {\r\n      labelCol: {span: 5},\r\n      wrapperCol: {span: 16}\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <FormItem label=\"角色名称\" {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: ''\r\n            })(\r\n              <Input type=\"text\" placeholder=\"请输入角色名称\"/>\r\n            )\r\n          }\r\n        </FormItem>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nAddRoleForm = Form.create()(AddRoleForm)\r\n\r\n\r\n/*\r\n用来设置角色权限的form组件\r\n */\r\nclass RoleAuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    roleName: PropTypes.string,\r\n    menus: PropTypes.array,\r\n    setRoleMenus: PropTypes.func,\r\n  }\r\n\r\n  onCheck = (checkedKeys, info) => {\r\n    console.log('onCheck', checkedKeys, info);\r\n    this.props.setRoleMenus(checkedKeys)\r\n  }\r\n\r\n  /*\r\n  渲染多个TreeNode\r\n   */\r\n  renderTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, menu) => {\r\n      /*\r\n      {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的path\r\n        icon: 'home', // 图标名称\r\n        children: []\r\n      }\r\n       */\r\n      const node = (\r\n        <TreeNode title={menu.title} key={menu.key}>\r\n          {\r\n            menu.children ?\r\n            this.renderTreeNodes(menu.children)\r\n            : null\r\n          }\r\n        </TreeNode>\r\n      )\r\n      pre.push(node)\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const {roleName, menus} = this.props\r\n\r\n    const formItemLayout = {\r\n      labelCol: {span: 5},\r\n      wrapperCol: {span: 16}\r\n    }\r\n    return (\r\n      <Form>\r\n        <FormItem label=\"角色名称：\" {...formItemLayout}>\r\n          <Input value={roleName} disabled/>\r\n        </FormItem>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll\r\n          onCheck={this.onCheck}\r\n          checkedKeys={menus}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.renderTreeNodes(menuList)}\r\n          </TreeNode>\r\n        </Tree>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  }\r\n  getOption = () => {\r\n    const {sales, inventorys} = this.state\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data:sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: inventorys\r\n      }]\r\n    }\r\n  }\r\n\r\n  update = () => {\r\n    const sales = this.state.sales.map(sale => sale + 1)\r\n    const inventorys = this.state.inventorys.map(inventory => inventory -1)\r\n    this.setState({\r\n      sales,\r\n      inventorys\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40]\r\n  }\r\n  getOption = () => {\r\n    const {sales, inventorys} = this.state\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data:sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: inventorys\r\n      }]\r\n    }\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [{\r\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n        type: 'line',\r\n        areaStyle: {}\r\n      }]\r\n    };\r\n\r\n  }\r\n\r\n  update = () => {\r\n    const sales = this.state.sales.map(sale => sale + 1)\r\n    const inventorys = this.state.inventorys.map(inventory => inventory -1)\r\n    this.setState({\r\n      sales,\r\n      inventorys\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n        <Card title='折线图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Order\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav/left-nav'\r\nimport Header from '../../components/header/header'\r\nimport Footer from '../../components/footer/footer'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport User from '../user/user'\r\nimport Role from '../role/role'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport Order from '../order/order'\r\n\r\nimport './admin.less'\r\n\r\n/*\r\n后台管理主界面的路由组件\r\n */\r\nclass Admin extends Component {\r\n\r\n  render() {\r\n    // 检查用户是否已经登陆, 如果还没有, 自动跳转到登陆界面\r\n    const user = this.props.user\r\n    if(!user._id) {\r\n      // this.props.history.replace('/login')  // 用在事件回调函数中\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Row className='container'>\r\n        <Col span={4}>\r\n          <LeftNav></LeftNav>\r\n        </Col>\r\n        <Col span={20} className='main'>\r\n          <Header/>\r\n          <div className='content'>\r\n            <Switch>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/order' component={Order}/>\r\n              <Route path='/charts/bar' component={Bar}/>\r\n              <Route path='/charts/line' component={Line}/>\r\n              <Route path='/charts/pie' component={Pie}/>\r\n              <Redirect to='/home'/>\r\n            </Switch>\r\n          </div>\r\n          <Footer/>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {}\r\n)(Admin)","import React from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用根组件\r\n\r\n请求路径与路由路径的匹配: 逐层匹配\r\n */\r\nexport default class App extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login}/>\r\n          <Route path='/' component={Admin}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","/*\r\n包含n个用于根据state/action来产生新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\nimport {\r\n  SET_MENU_TITLE,\r\n  RECEIVE_USER,\r\n  ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\n/*\r\n管理当前菜单标题的reducer函数\r\n */\r\nconst initMenuTitle = ''\r\nfunction menuTitle(state=initMenuTitle, action) {\r\n  switch (action.type) {\r\n    case SET_MENU_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n管理当前登陆用户的信息\r\n */\r\nconst initUser = storageUtils.getUser() || {}\r\nfunction user(state=initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.data\r\n    case ERROR_MSG:\r\n      const msg = action.data\r\n      return {msg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// 向外暴露整合后产生的reducer\r\nexport default combineReducers({\r\n  menuTitle,\r\n  user\r\n})\r\n\r\n/*\r\ncombineReducers()返回一个新的reducer\r\nreducer执行返回的新的state是什么结构?\r\n  类型: 对象\r\n  内部:  {menuTitle: menuTitle(), user: user()}\r\n */","/*\r\nredux最核心的管理对象\r\n */\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer'\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/*\r\n入口JS\r\n */\r\nimport React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport storageUtils from './utils/storageUtils'\r\n\r\nimport App from './App'\r\nimport store from './redux/store'\r\n\r\nrender((\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>\r\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}